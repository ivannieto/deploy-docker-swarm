# -*- mode: ruby -*-
# vi: set ft=ruby :

# -------------------------------------------------------------------
# Configuration options
# -------------------------------------------------------------------
NUM_OF_MANAGERS=2
NUM_OF_WORKERS=2
DO_REGION="fra1"
DO_IMAGE="docker-16-04"
DO_SIZE="1gb"
DO_ACCESS_TOKEN=ENV['DO_TOKEN']
# -------------------------------------------------------------------
# (End configuration options)

# -- Internal variables
VAGRANTFILE_API_VERSION = "2"

# -- Install the required plugins
required_plugins = %w( vagrant-digitalocean vagrant-host-shell vagrant-vbguest vagrant-triggers )
required_plugins.each do |plugin|
  system "vagrant plugin install #{plugin}" unless Vagrant.has_plugin? plugin
end

@initManager = <<EOD
echo initManager Arguments: $*
local currManager=$3
# Todo: We have an issue here, if re-creating the machines, then the old token will be re-used, which is wrong ...
if [ ! -d "/vagrant/.vagrant/swarm-token" ]; then
    mkdir /vagrant/.vagrant/swarm-token
    chmod 777 /vagrant/.vagrant/swarm-token

    docker swarm init --advertise-addr eth1:2377
    docker swarm join-token -q manager > /vagrant/.vagrant/swarm-token/manager
    docker swarm join-token -q worker > /vagrant/.vagrant/swarm-token/worker
else
    docker swarm join \
      --token `cat /vagrant/.vagrant/swarm-token/manager` \
      192.168.50.100:2377
fi
EOD

@initWorker = <<EOD
docker swarm join \
  --token `cat  /vagrant/.vagrant/swarm-token/worker` \
  192.168.50.100:2377
EOD


Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define "droplet1" do |config|
    config.vm.provider :digital_ocean do |provider, override|

      override.ssh.private_key_path = '~/.ssh/do_id_rsa'
      provider.ssh_key_name = 'vagrant'

      override.vm.box = 'digital_ocean'
      override.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"

      provider.token = DO_ACCESS_TOKEN
      provider.image = "docker"
      provider.region = "fra1"
      provider.size = "1gb"
      provider.ipv6 = false
    end
  end

end
